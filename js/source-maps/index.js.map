{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/consola/dist/consola.browser.js","src/js/Game.js","src/js/actors/Sub.js","src/js/config.js","src/js/index.js","src/js/scenes/GameOverScene.js","src/js/scenes/MainScene.js","src/js/scenes/MenuScene.js","src/js/scenes/PreloadScene.js","src/js/scenes/SoundManagerScene.js","src/js/scenes/UIScene.js","src/js/scenes/VictoryScene.js"],"names":[],"mappings":"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","file":"../index.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=t||self).consola=e()}(this,(function(){\"use strict\";function t(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function e(t,e){for(var r=0;r<e.length;r++){var o=e[r];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function r(t,r,o){return r&&e(t.prototype,r),o&&e(t,o),t}function o(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function n(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,o)}return r}function s(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?n(Object(r),!0).forEach((function(e){o(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function i(t){return function(t){if(Array.isArray(t))return l(t)}(t)||function(t){if(\"undefined\"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||a(t)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function a(t,e){if(t){if(\"string\"==typeof t)return l(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return\"Object\"===r&&t.constructor&&(r=t.constructor.name),\"Map\"===r||\"Set\"===r?Array.from(t):\"Arguments\"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?l(t,e):void 0}}function l(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,o=new Array(e);r<e;r++)o[r]=t[r];return o}function u(t){if(\"undefined\"==typeof Symbol||null==t[Symbol.iterator]){if(Array.isArray(t)||(t=a(t))){var e=0,r=function(){};return{s:r,n:function(){return e>=t.length?{done:!0}:{done:!1,value:t[e++]}},e:function(t){throw t},f:r}}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}var o,n,s=!0,i=!1;return{s:function(){o=t[Symbol.iterator]()},n:function(){var t=o.next();return s=t.done,t},e:function(t){i=!0,n=t},f:function(){try{s||null==o.return||o.return()}finally{if(i)throw n}}}}var c={};c[c.Fatal=0]=\"Fatal\",c[c.Error=0]=\"Error\",c[c.Warn=1]=\"Warn\",c[c.Log=2]=\"Log\",c[c.Info=3]=\"Info\",c[c.Success=3]=\"Success\",c[c.Debug=4]=\"Debug\",c[c.Trace=5]=\"Trace\",c[c.Silent=-1/0]=\"Silent\",c[c.Verbose=1/0]=\"Verbose\";var f={silent:{level:-1},fatal:{level:c.Fatal},error:{level:c.Error},warn:{level:c.Warn},log:{level:c.Log},info:{level:c.Info},success:{level:c.Success},debug:{level:c.Debug},trace:{level:c.Trace},verbose:{level:c.Trace},ready:{level:c.Info},start:{level:c.Info}};function h(t){return e=t,\"[object Object]\"===Object.prototype.toString.call(e)&&(!(!t.message&&!t.args)&&!t.stack);var e}var p=!1,y=[],d=function(){function e(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};for(var o in t(this,e),this._reporters=r.reporters||[],this._types=r.types||f,this.level=void 0!==r.level?r.level:3,this._defaults=r.defaults||{},this._async=void 0!==r.async?r.async:void 0,this._stdout=r.stdout,this._stderr=r.stderr,this._mockFn=r.mockFn,this._throttle=r.throttle||1e3,this._throttleMin=r.throttleMin||5,this._types){var n=s(s({type:o},this._types[o]),this._defaults);this[o]=this._wrapLogFn(n),this[o].raw=this._wrapLogFn(n,!0)}this._mockFn&&this.mockTypes(),this._lastLogSerialized=void 0,this._lastLog=void 0,this._lastLogTime=void 0,this._lastLogCount=0,this._throttleTimeout=void 0}return r(e,[{key:\"create\",value:function(t){return new e(Object.assign({reporters:this._reporters,level:this.level,types:this._types,defaults:this._defaults,stdout:this._stdout,stderr:this._stderr,mockFn:this._mockFn},t))}},{key:\"withDefaults\",value:function(t){return this.create({defaults:Object.assign({},this._defaults,t)})}},{key:\"withTag\",value:function(t){return this.withDefaults({tag:this._defaults.tag?this._defaults.tag+\":\"+t:t})}},{key:\"addReporter\",value:function(t){return this._reporters.push(t),this}},{key:\"removeReporter\",value:function(t){if(t){var e=this._reporters.indexOf(t);if(e>=0)return this._reporters.splice(e,1)}else this._reporters.splice(0);return this}},{key:\"setReporters\",value:function(t){return this._reporters=Array.isArray(t)?t:[t],this}},{key:\"wrapAll\",value:function(){this.wrapConsole(),this.wrapStd()}},{key:\"restoreAll\",value:function(){this.restoreConsole(),this.restoreStd()}},{key:\"wrapConsole\",value:function(){for(var t in this._types)console[\"__\"+t]||(console[\"__\"+t]=console[t]),console[t]=this[t].raw}},{key:\"restoreConsole\",value:function(){for(var t in this._types)console[\"__\"+t]&&(console[t]=console[\"__\"+t],delete console[\"__\"+t])}},{key:\"wrapStd\",value:function(){this._wrapStream(this.stdout,\"log\"),this._wrapStream(this.stderr,\"log\")}},{key:\"_wrapStream\",value:function(t,e){var r=this;t&&(t.__write||(t.__write=t.write),t.write=function(t){r[e].raw(String(t).trim())})}},{key:\"restoreStd\",value:function(){this._restoreStream(this.stdout),this._restoreStream(this.stderr)}},{key:\"_restoreStream\",value:function(t){t&&t.__write&&(t.write=t.__write,delete t.__write)}},{key:\"pauseLogs\",value:function(){p=!0}},{key:\"resumeLogs\",value:function(){p=!1;var t,e=u(y.splice(0));try{for(e.s();!(t=e.n()).done;){var r=t.value;r[0]._logFn(r[1],r[2])}}catch(t){e.e(t)}finally{e.f()}}},{key:\"mockTypes\",value:function(t){if(this._mockFn=t||this._mockFn,\"function\"==typeof this._mockFn)for(var e in this._types)this[e]=this._mockFn(e,this._types[e])||this[e],this[e].raw=this[e]}},{key:\"_wrapLogFn\",value:function(t,e){var r=this;return function(){for(var o=arguments.length,n=new Array(o),s=0;s<o;s++)n[s]=arguments[s];if(!p)return r._logFn(t,n,e);y.push([r,t,n,e])}}},{key:\"_logFn\",value:function(t,e,r){var o=this;if(t.level>this.level)return!!this._async&&Promise.resolve(!1);var n=Object.assign({date:new Date,args:[]},t);!r&&1===e.length&&h(e[0])?Object.assign(n,e[0]):n.args=Array.from(e),n.message&&(n.args.unshift(n.message),delete n.message),n.additional&&(Array.isArray(n.additional)||(n.additional=n.additional.split(\"\\n\")),n.args.push(\"\\n\"+n.additional.join(\"\\n\")),delete n.additional),n.type=\"string\"==typeof n.type?n.type.toLowerCase():\"\",n.tag=\"string\"==typeof n.tag?n.tag.toLowerCase():\"\";var a=function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0],e=o._lastLogCount-o._throttleMin;if(o._lastLog&&e>0){var r=i(o._lastLog.args);e>1&&r.push(\"(repeated \".concat(e,\" times)\")),o._log(s(s({},o._lastLog),{},{args:r})),o._lastLogCount=1}if(t){if(o._lastLog=n,o._async)return o._logAsync(n);o._log(n)}};clearTimeout(this._throttleTimeout);var l=this._lastLogTime?n.date-this._lastLogTime:0;if(this._lastLogTime=n.date,l<this._throttle)try{var u=JSON.stringify([n.type,n.tag,n.args]),c=this._lastLogSerialized===u;if(this._lastLogSerialized=u,c&&(this._lastLogCount++,this._lastLogCount>this._throttleMin))return void(this._throttleTimeout=setTimeout(a,this._throttle))}catch(t){}a(!0)}},{key:\"_log\",value:function(t){var e,r=u(this._reporters);try{for(r.s();!(e=r.n()).done;){e.value.log(t,{async:!1,stdout:this.stdout,stderr:this.stderr})}}catch(t){r.e(t)}finally{r.f()}}},{key:\"_logAsync\",value:function(t){var e=this;return Promise.all(this._reporters.map((function(r){return r.log(t,{async:!0,stdout:e.stdout,stderr:e.stderr})})))}},{key:\"stdout\",get:function(){return this._stdout||console._stdout}},{key:\"stderr\",get:function(){return this._stderr||console._stderr}}]),e}();d.prototype.add=d.prototype.addReporter,d.prototype.remove=d.prototype.removeReporter,d.prototype.clear=d.prototype.removeReporter,d.prototype.withScope=d.prototype.withTag,d.prototype.mock=d.prototype.mockTypes,d.prototype.pause=d.prototype.pauseLogs,d.prototype.resume=d.prototype.resumeLogs;var v,g=function(){function e(r){t(this,e),this.options=Object.assign({},r),this.defaultColor=\"#7f8c8d\",this.levelColorMap={0:\"#c0392b\",1:\"#f39c12\",3:\"#00BCD4\"},this.typeColorMap={success:\"#2ecc71\"}}return r(e,[{key:\"log\",value:function(t){var e=t.level<1?console.__error||console.error:1===t.level&&console.warn?console.__warn||console.warn:console.__log||console.log,r=\"log\"!==t.type?t.type:\"\",o=t.tag?t.tag:\"\",n=this.typeColorMap[t.type]||this.levelColorMap[t.level]||this.defaultColor,s=\"\\n      background: \".concat(n,\";\\n      border-radius: 0.5em;\\n      color: white;\\n      font-weight: bold;\\n      padding: 2px 0.5em;\\n    \"),a=\"%c\".concat([o,r].filter(Boolean).join(\":\"));\"string\"==typeof t.args[0]?e.apply(void 0,[\"\".concat(a,\"%c \").concat(t.args[0]),s,\"\"].concat(i(t.args.slice(1)))):e.apply(void 0,[a,s].concat(i(t.args)))}}]),e}();return\"undefined\"!=typeof window&&window.consola||((v=new d({reporters:[new g]})).Consola=d,v.LogLevel=c,v.BrowserReporter=g,v)}));\n","/*\nglobal Phaser\n*/\n\nimport config from './config';\nimport PreloadScene from 'scenes/PreloadScene';\nimport MainScene from 'scenes/MainScene';\nimport MenuScene from 'scenes/MenuScene';\nimport UIScene from 'scenes/UIScene';\nimport SoundManagerScene from './scenes/SoundManagerScene';\nimport GameOverScene from './scenes/GameOverScene';\nimport VictoryScene from './scenes/VictoryScene';\n\nexport default class Game extends Phaser.Game {\n\n    constructor() {\n        const gameConfig = {\n            type : Phaser.AUTO,\n            scale: {\n                mode      : Phaser.Scale.FIT,\n                parent    : 'phaser-game',\n                autoCenter: Phaser.Scale.CENTER_BOTH,\n                width     : config.GAME_WIDTH,\n                height    : config.GAME_HEIGHT,\n            },\n            physics: {\n                default: 'matter',\n                matter : {\n                    debug  : config.DEBUG,\n                    gravity: {\n                        y: 0,\n                    },\n                },\n            },\n            scene: [PreloadScene, MenuScene, MainScene, UIScene, SoundManagerScene, GameOverScene, VictoryScene],\n        };\n\n        super(gameConfig);\n    }\n}\n\n","/* global Phaser */\n\nimport config from '../config';\n\nconst consola = require('consola').withTag('Sub');\n\nexport default class Sub extends Phaser.GameObjects.GameObject {\n    constructor(config) {\n        super(config.scene);\n\n        this.hasWon = false;\n        this.subSprite = config.scene.add.sprite(config.sub.x, config.sub.y, config.sub.key);\n        this.subSprite.setPipeline('Light2D');\n        this.propSprite = config.scene.add.sprite(config.prop.x, config.prop.y, config.prop.key).play('propellerAnimation');\n        this.propSprite.setPipeline('Light2D');\n\n        this.subContainer = config.scene.add.container(config.pos.x, config.pos.y, [this.propSprite, this.subSprite]);\n\n        const colGroup = config.scene.matter.world.nextGroup();\n        this.subMatterContainer = config.scene.matter.add.gameObject(this.subContainer, { shape: config.subShape });\n        this.subMatterContainer.setScale(0.5, 0.5);\n        this.subMatterContainer.setCollisionGroup(colGroup);\n\n        // relative to sprite origin\n        this.lightLocation = {\n            x: 135 - this.subSprite.width / 2,\n            y: 20 - this.subSprite.height / 2,\n        };\n\n        this.lightColor = 0xffffff;\n\n        this.lightChargeLevel = 1.0;\n        this.health = 1.0;\n\n        this.hasLoot = false;\n\n        config.scene.time.addEvent({\n            delay        : 1000,\n            loop         : true,\n            callback     : this.lightPowerTick,\n            callbackScope: this,\n        });\n\n        this.createLights(config.scene);\n    }\n\n    lightPowerTick() {\n        if (this.lightIsOn() && !config.LIGHTS_ALWAYS_ON) {\n            this.lightChargeLevel = Phaser.Math.Clamp(this.lightChargeLevel - .1, 0, 1);\n            if (this.lightChargeLevel === 0) {\n                consola.info('out of power');\n                this.toggleLights();\n            }\n            this.scene.events.emit('lightChargeChanged', this.lightChargeLevel);\n        }\n    }\n\n    update(keys) {\n        if (!this.isDead()) {\n            const surfaceLevel = (config.SKY_HEIGHT - 60) + (this.subSprite.height / 2);\n            const atSurface = this.subMatterContainer.y < surfaceLevel;\n\n            if (!this.hasWon) {\n                this.handleInput(keys, atSurface);\n            }\n\n            const lerpRotation = Phaser.Math.Linear(this.subMatterContainer.rotation, 0, 0.2);\n\n            this.subMatterContainer.setRotation(lerpRotation);\n\n            if (atSurface) {\n                this.subMatterContainer.y = surfaceLevel;\n            }\n        }\n\n        this.light.x = this.lightLocation.x + this.subMatterContainer.x;\n        this.light.y = this.lightLocation.y + this.subMatterContainer.y;\n    }\n\n    flickerLights() {\n        consola.info('flicker');\n        const delay = Phaser.Math.Between(100, 500);\n        this.scene.time.addEvent({\n            delay        : delay,\n            loop         : false,\n            callback     : this.flickerLights,\n            callbackScope: this,\n        });\n\n        this.toggleLights();\n    }\n\n    toggleLights() {\n        if (!this.lightIsOn() && this.lightChargeLevel > 0) {\n            this.light.setRadius(300);\n            if (!this.isDead()) {\n                this.scene.events.emit('lightsOn');\n            }\n        }\n        else {\n            this.light.setEmpty();\n            if (!this.isDead()) {\n                this.scene.events.emit('lightsOff');\n            }\n        }\n    }\n\n    lightIsOn() {\n        return !this.light.isEmpty();\n    }\n\n    createLights(scene) {\n        this.light = scene.lights.addLight(this.lightLocation.x + this.subMatterContainer.x,\n            this.lightLocation.y + this.subMatterContainer.y, 300)\n            .setColor(this.lightColor).setIntensity(5);\n    }\n\n    pickupGlowFish() {\n        consola.info('picked up glowfish');\n        this.lightChargeLevel = Phaser.Math.Clamp(this.lightChargeLevel + .3, 0, 1);\n        this.scene.events.emit('lightChargeChanged', this.lightChargeLevel);\n    }\n\n    takeDamage(amount) {\n        if (!config.INVULNERABLE) {\n            this.health = Phaser.Math.Clamp(this.health - amount, 0, 1);\n            this.scene.events.emit('healthChanged', this.health);\n            if (this.hasLoot) {\n                this.subSprite.setTexture('sub-loot-damaged-image');\n            }\n            else {\n                this.subSprite.setTexture('sub-damaged-image');\n            }\n            if (this.health === 0) {\n                consola.info('dead');\n                this.propSprite.anims.stop();\n            }\n        }\n    }\n\n    isDead() {\n        return this.health === 0;\n    }\n\n    flipX(direction) {\n        if (direction === 'left') {\n            this.subMatterContainer.setScale(0.5, 0.5);\n        }\n        else if (direction === 'right') {\n            this.subMatterContainer.setScale(-0.5, 0.5);\n        }\n    }\n\n    collectLoot() {\n        // change texture and body shape\n        this.subSprite.setTexture('sub-loot-image');\n        this.hasLoot = true;\n    }\n\n    deliverLoot() {\n        this.subSprite.setTexture('sub-image');\n        this.hasLoot = false;\n    }\n\n    handleInput(keys, atSurface) {\n        if (keys.W.isDown && !atSurface) {\n            this.subMatterContainer.thrustLeft(config.THRUST_POWER);\n        }\n        if (keys.A.isDown) {\n            this.subMatterContainer.thrustBack(config.THRUST_POWER);\n            this.flipX('left');\n        }\n        if (keys.S.isDown) {\n            this.subMatterContainer.thrustRight(config.THRUST_POWER);\n        }\n        if (keys.D.isDown) {\n            this.subMatterContainer.thrust(config.THRUST_POWER);\n            this.flipX('right');\n        }\n    }\n}\n","/* global ENV */\n\nconst config = {\n    GAME_WIDTH      : 1024,\n    GAME_HEIGHT     : 576,\n    WORLD_WIDTH     : 2000,\n    WORLD_HEIGHT    : 3000,\n    DEBUG           : false,\n    THRUST_POWER    : 0.00085,\n    LIGHTS_ALWAYS_ON: true,\n    INVULNERABLE    : false,\n    SKY_HEIGHT      : 100,\n    GRAVITY         : .75,\n    DISABLE_SOUNDS  : false,\n};\n\nif (ENV === 'dev') {\n    config.LOG_LEVEL = Infinity;\n}\nelse if (ENV === 'prod') {\n    config.LOG_LEVEL = 3;\n}\n\nexport default config;\n","import Game from './Game.js';\n\nwindow.addEventListener('load', () => {\n    // Launch the game once the page loads\n    new Game();\n});\n","/* global Phaser */\n\nimport config from '../config';\n\nexport default class GameOverScene extends Phaser.Scene {\n    constructor() {\n        super({ key: 'GameOverScene', active: true });\n    }\n\n    create() {\n        this.scene.setVisible(false); // hide unless specifically shown\n\n        const gameOverText = this.add.text(config.GAME_WIDTH / 2, config.GAME_HEIGHT / 2, 'Game Over', { backgroundColor: '#000' });\n        gameOverText.x -= gameOverText.width / 2;\n\n        const restartButton = this.add.text(config.GAME_WIDTH / 2, gameOverText.y + gameOverText.height + 20, 'Restart Game', { backgroundColor: '#000' });\n        restartButton.x -= restartButton.width / 2;\n        restartButton.setInteractive();\n        restartButton.on('pointerup', () => {\n            const gameScene = this.scene.get('MainScene');\n            const uiScene = this.scene.get('UIScene');\n            uiScene.scene.restart();\n            gameScene.scene.restart();\n            this.scene.setVisible(false);\n        });\n    }\n}\n","/* global Phaser */\n\nconst consola = require('consola').withTag('MainScene');\nimport config from '../config';\n\nimport Sub from '../actors/Sub';\n// import GlowFish from '../actors/GlowFish';\n\nexport default class MainScene extends Phaser.Scene {\n\n    constructor() {\n        super({ key: 'MainScene' });\n    }\n\n    preload() {\n    }\n\n    create() {\n        consola.info('Create');\n\n        this.victory = false;\n\n        this.scene.setVisible(true, 'UIScene');\n        this.scene.setVisible(false, 'GameOverScene');\n        this.scene.setVisible(false, 'VictoryScene');\n\n        this.lights.enable().setAmbientColor(0x111111);\n\n        const sky = this.add.graphics();\n        sky.fillStyle(0x99ccff);\n        sky.fillRect(0, 0, config.WORLD_WIDTH, config.SKY_HEIGHT);\n\n        // Add the Actors to the scene\n        // Barge sprite\n        this.bargeSprite = this.add.sprite(1000, 80, 'barge-image');\n        this.bargeSprite.scale = 1.2;\n\n        this.shapes = this.cache.json.get('shapes');\n        this.matter.world.setBounds(0, 0, config.WORLD_WIDTH, config.WORLD_HEIGHT);\n\n        this.groundGroup = this.matter.world.nextGroup();\n        const ground = this.matter.add.sprite(0, 0, 'ground-image', null,\n            { shape: this.shapes.ground }).setCollisionGroup(this.groundGroup);\n\n        this.bubbles = [];\n        for (let i = 0; i < 10; i++) {\n            this.generateBubbles(200, 1800, 200, 1000);\n        }\n        this.time.addEvent({\n            delay        : 2000,\n            loop         : true,\n            callback     : this.generateBubbles,\n            callbackScope: this,\n        });\n\n        ground.setPosition(975 + ground.centerOfMass.x, 1820 + ground.centerOfMass.y);\n        ground.setPipeline('Light2D');\n\n        this.sub = new Sub({\n            scene: this,\n            sub  : {\n                x  : -22,\n                y  : -20,\n                key: 'sub-image',\n            },\n            prop: {\n                x  : 82,\n                y  : 36,\n                key: 'propeller',\n            },\n            pos     : { x: 1000, y: 130 },\n            subShape: this.shapes.Sub_Base,\n        });\n\n        this.glowFishGroup = this.matter.world.nextGroup(true);\n        for (let i = 0; i < 10; i++) {\n            const x = Phaser.Math.Between(200, 1500);\n            const y = Phaser.Math.Between(config.SKY_HEIGHT + 50, 300);\n            const startFrame = Phaser.Math.Between(0, 30);\n            const glowFish = this.matter.add.sprite(x, y, 'glow-fish').play({ key: 'glowFishAnimation', startFrame });\n            glowFish.setCollisionGroup(this.glowFishGroup);\n            glowFish.setScale(0.25, 0.25);\n            glowFish.setPipeline('Light2D');\n            glowFish.directionX = Phaser.Math.Between(-1, 1);\n            glowFish.setIgnoreGravity(true);\n            if (glowFish.directionX === 0) {\n                glowFish.directionX = -1;\n            }\n        }\n\n        // Place Shipwreck and loot\n        this.createShipwreckLoot();\n\n        // Collision checks\n        this.collisionChecks();\n\n        // Set up the camera\n        this.cameras.main.setBounds(0, 0, config.WORLD_WIDTH, config.WORLD_HEIGHT);\n        this.cameras.main.startFollow(this.sub.subMatterContainer, false, 0.05, 0.05);\n        this.cameras.main.setBackgroundColor(0x004080);\n\n        // Fullscreen button\n        // TODO: Add this in the right position\n        // const fullscreenButton = this.add.image(config.GAME_WIDTH - 16, 16, 'fullscreen', 0)\n        // .setOrigin(1, 0).setInteractive();\n        // fullscreenButton.on('pointerup', () => {\n        //     if (this.scale.isFullscreen) {\n        //         consola.debug('Stop fullscreen');\n        //         fullscreenButton.setFrame(0);\n        //         this.scale.stopFullscreen();\n        //     }\n        //     else {\n        //         consola.debug('Start fullscreen');\n        //         fullscreenButton.setFrame(1);\n        //         this.scale.startFullscreen();\n        //     }\n        // }, this);\n\n        this.input.on('pointerdown', (pointer) => {\n            if (!this.sub.isDead()) {\n                this.sub.toggleLights();\n            }\n        });\n\n        this.keys = this.input.keyboard.addKeys('W,S,A,D');\n    }\n\n    collisionChecks() {\n        this.matter.world.on('collisionstart', (event, a, b) => {\n            let subObj = null;\n            let otherObj = null;\n            if (a.gameObject === this.sub.subMatterContainer) {\n                subObj = a;\n                otherObj = b;\n            }\n            else if (b.gameObject === this.sub.subMatterContainer) {\n                subObj = b;\n                otherObj = a;\n            }\n\n            if (subObj && !this.sub.isDead() && otherObj) {\n                if (otherObj.collisionFilter.group === this.glowFishGroup) {\n                    this.sub.pickupGlowFish();\n                    otherObj.gameObject.destroy();\n                }\n                else if (otherObj.parent.label === 'loot') {\n                    this.collectLoot(otherObj);\n                }\n                else if (otherObj.collisionFilter.group === 0) {\n                    consola.info('collided with ground');\n                    this.sub.takeDamage(.5);\n                    if (this.sub.isDead()) {\n                        this.matter.world.setGravity(0, config.GRAVITY);\n                        this.scene.setVisible(true, 'GameOverScene');\n                        this.sub.flickerLights();\n                    }\n                }\n                else {\n                    consola.info('unknown collision: ' + otherObj.collisionFilter.group);\n                }\n            }\n        });\n    }\n\n    generateBubbles(minX = 200, maxX = 1800, minY = 2000, maxY = 3000) {\n        const x = Phaser.Math.Between(minX, maxX);\n        const y = Phaser.Math.Between(minY, maxY);\n\n        const frameRate = Phaser.Math.Between(5, 30);\n        const bubble = this.add.sprite(x, y, 'bubbles').play({ key: 'bubblesAnimation', frameRate });\n        bubble.setScale(.25, .25);\n        bubble.setPipeline('Light2D');\n        bubble.setOrigin(0, 0);\n        bubble.tint = 0x001a33;\n        this.bubbles.push(bubble);\n    }\n\n    update(time, delta) {\n        if (!this.victory) {\n            this.sub.update(this.keys);\n        }\n\n\n        this.setAmbientColor();\n\n        this.bubbles.forEach((bubble, index, object) => {\n            bubble.y -= 50 * delta / 1000;\n            if (bubble.y < config.SKY_HEIGHT) {\n                bubble.destroy();\n                object.splice(index, 1);\n            }\n        });\n\n        this.matter.world.getAllBodies().forEach((body) => {\n            if (body.collisionFilter.group === this.glowFishGroup) {\n                body.gameObject.setVelocityX(.5 * body.gameObject.directionX);\n                body.gameObject.flipX = body.gameObject.directionX < 0;\n\n                if (body.gameObject.x < 100) {\n                    body.gameObject.directionX = 1;\n                }\n                else if (body.gameObject.x > 1800) {\n                    body.gameObject.directionX = -1;\n                }\n            }\n        });\n\n        const distance = Phaser.Math.Distance.BetweenPoints(this.sub.subContainer, this.bargeSprite);\n        if (distance < 120 && this.sub.hasLoot) {\n            this.deliverLoot();\n        }\n    }\n\n    setAmbientColor() {\n        const lightAmbient = Phaser.Display.Color.HexStringToColor('0x0066cc');\n        const darkAmbient = Phaser.Display.Color.HexStringToColor('0x0');\n\n        const maxDarkDepth = 2500;\n        const subDepth = Phaser.Math.Clamp(this.sub.subMatterContainer.y, 0, maxDarkDepth);\n\n        const newAmbient = Phaser.Display.Color.Interpolate.ColorWithColor(lightAmbient, darkAmbient,\n            maxDarkDepth, subDepth);\n        const newAmbientNumber = Phaser.Display.Color.ValueToColor(newAmbient).color;\n        this.lights.setAmbientColor(newAmbientNumber);\n        this.cameras.main.setBackgroundColor(newAmbient);\n    }\n\n    createShipwreckLoot() {\n        const spawnPositions = [\n            // Left\n            {\n                loot : { x: 315, y: 2880 },\n                wreck: { x: 275, y: 2880 },\n            },\n            // Center\n            {\n                loot : { x: 1045, y: 2870 },\n                wreck: { x: 1000, y: 2870 },\n            },\n            // Right\n            {\n                loot : { x: 1800, y: 2920 },\n                wreck: { x: 1760, y: 2920 },\n            },\n        ];\n\n        // Pick a random spawn point for the loot\n        const spawnPosition = spawnPositions[Phaser.Math.Between(0, 2)];\n\n        const lootImage = this.matter.add.image(spawnPosition.loot.x, spawnPosition.loot.y, 'loot-image', null,\n            { shape: this.shapes.Loot, label: 'loot' });\n\n        lootImage.setScale(0.5, 0.5);\n        lootImage.setPipeline('Light2D');\n\n        const wreckImage = this.add.image(spawnPosition.wreck.x, spawnPosition.wreck.y, 'wreck-image');\n        wreckImage.setScale(0.5, 0.5);\n        wreckImage.setPipeline('Light2D');\n    }\n\n    collectLoot(loot) {\n        // remove loot from scene\n        loot.gameObject.destroy();\n\n        // Update sub\n        this.sub.collectLoot();\n    }\n\n    deliverLoot() {\n        consola.log('Loot delivered');\n        this.bargeSprite.setTexture('barge-filled-image');\n        this.sub.deliverLoot();\n        this.scene.setVisible(true, 'VictoryScene');\n        this.sub.hasWon = true;\n    }\n}\n","/* global Phaser */\n\nconst consola = require('consola').withTag('MenuScene');\n\n/**\n * MenuScene is the scene of the main menu of the game\n */\nexport default class MenuScene extends Phaser.Scene {\n\n    /**\n     * construct passing the unique key to the game instance\n     */\n    constructor() {\n        super({ key: 'MenuScene' });\n    }\n\n    /**\n     * Create the games Main Menu\n     *\n     * @param {object} data generic data to pass between scenes\n     */\n    create(data) {\n        consola.info('Create');\n\n        // TODO: create a main menu \"Play\" button\n        this.scene.start('MainScene');\n    }\n}\n","/* global Phaser */\nimport config from '../config';\n\nconst consola = require('consola').withTag('PreloadScene');\nconsola.level = config.LOG_LEVEL;\n\nexport default class PreloadScene extends Phaser.Scene {\n\n    constructor() {\n        super({ key: 'PreloadScene' });\n    }\n\n    preload() {\n        consola.trace('Loading assets..');\n\n        // Static images\n        this.load.image('ground-image', '../assets/images/ground.png');\n        this.load.image('sub-image', '../assets/images/Sub-Base.png');\n        this.load.image('sub-loot-image', '../assets/images/Sub_Loot.png');\n        this.load.image('sub-damaged-image', '../assets/images/Sub-Base-damaged.png');\n        this.load.image('sub-loot-damaged-image', '../assets/images/Sub-Loot-damaged.png');\n        this.load.image('wreck-image', '../assets/images/Shipwreck.png');\n        this.load.image('loot-image', '../assets/images/Loot.png');\n        this.load.image('barge-image', '../assets/images/Barge.png');\n        this.load.image('barge-filled-image', '../assets/images/Barge_Filled.png');\n\n        // Sprite sheets\n        this.load.spritesheet('fullscreen', '../assets/images/fullscreen-white.png', { frameWidth: 64, frameHeight: 64 });\n        this.load.spritesheet('propeller', '../assets/images/Sub-Prop-sprite-sheet.png', { frameWidth: 56, frameHeight: 26 });\n        this.load.spritesheet('glow-fish', '../assets/images/Glow_Fish_Animated-Spritesheet.png', { frameWidth: 220, frameHeight: 114 });\n        this.load.spritesheet('bubbles', '../assets/images/Bubbles Spritesheet.png', { frameWidth: 154, frameHeight: 300 });\n\n        // Physics shapes\n        this.load.json('shapes', 'assets/json/shapes.json');\n    }\n\n    /**\n     * Pre-create any static objects that will be used in the game e.g. animations\n     */\n    create() {\n        consola.success('Game loaded');\n\n        // Create animations\n        const propAnimConfig = {\n            key      : 'propellerAnimation',\n            frames   : this.anims.generateFrameNumbers('propeller', { start: 0, end: 3, first: 0 }),\n            frameRate: 20,\n            repeat   : -1,\n        };\n        this.anims.create(propAnimConfig);\n\n        const glowFishAnimConfig = {\n            key      : 'glowFishAnimation',\n            frames   : this.anims.generateFrameNumbers('glow-fish', { start: 0, end: 30, first: 0 }),\n            frameRate: 20,\n            repeat   : -1,\n        };\n        this.anims.create(glowFishAnimConfig);\n\n        const bubblesAnimConfig = {\n            key      : 'bubblesAnimation',\n            frames   : this.anims.generateFrameNumbers('bubbles', { start: 0, end: 30, first: 0 }),\n            frameRate: 20,\n            repeat   : -1,\n        };\n        this.anims.create(bubblesAnimConfig);\n\n        this.scene.start('MenuScene');\n    }\n}\n","/* global Phaser */\n\nimport config from '../config';\n\nexport default class SoundManagerScene extends Phaser.Scene {\n    constructor() {\n        super({ key: 'SoundManagerScene', active: true });\n    }\n\n    preload() {\n        this.load.audio('sub-crash', '../assets/sounds/sub-crash.mp3');\n        this.load.audio('lights-on', '../assets/sounds/lights-on.mp3');\n        this.load.audio('lights-off', '../assets/sounds/lights-off.mp3');\n        this.load.audio('swallow', '../assets/sounds/swallow.mp3');\n        this.load.audio('propeller', '../assets/sounds/propeller.mp3');\n        this.load.audio('main-music', '../assets/sounds/ld48-ambient-play-music.mp3');\n        this.load.audio('bubble1', '../assets/sounds/bubble1.mp3');\n        this.load.audio('bubble2', '../assets/sounds/bubble2.mp3');\n        this.load.audio('bubble3', '../assets/sounds/bubble3.mp3');\n        this.load.audio('whale', '../assets/sounds/whale.mp3');\n        this.load.audio('sea-creature1', '../assets/sounds/sea-creature1.mp3');\n        this.load.audio('sea-creature2', '../assets/sounds/sea-creature2.mp3');\n    }\n\n    create() {\n        if (config.DISABLE_SOUNDS) return;\n\n        this.miscSounds = [\n            this.sound.add('bubble1'),\n            this.sound.add('bubble2'),\n            this.sound.add('bubble3'),\n            this.sound.add('whale'),\n            this.sound.add('sea-creature1'),\n            this.sound.add('sea-creature2'),\n        ];\n        this.scene.get('MainScene').time.addEvent({\n            delay        : 5000,\n            loop         : false,\n            callback     : this.playRandomSound,\n            callbackScope: this,\n        });\n\n        this.subCrash = this.sound.add('sub-crash');\n        this.lightsOn = this.sound.add('lights-on');\n        this.lightsOff = this.sound.add('lights-off');\n        this.swallow = this.sound.add('swallow');\n        this.propeller = this.sound.add('propeller');\n        this.propeller.play({ loop: true });\n\n        this.gameScene = this.scene.get('MainScene');\n        this.gameScene.events.on('healthChanged', (health) => {\n            this.subCrash.play();\n            if (health === 0) {\n                this.propeller.stop();\n            }\n        });\n\n        this.gameScene.events.on('lightsOn', () => {\n            this.lightsOn.play();\n        });\n\n        this.gameScene.events.on('lightsOff', () => {\n            this.lightsOff.play();\n        });\n\n        this.gameScene.events.on('lightChargeChanged', () => {\n            this.swallow.play({ volume: 0.5 });\n        });\n\n        this.mainMusic = this.sound.add('main-music');\n        this.mainMusic.play({ loop: true, volume: 0.25 });\n    }\n\n    playRandomSound() {\n        const delay = Phaser.Math.Between(15000, 3000);\n        this.scene.get('MainScene').time.addEvent({\n            delay        : delay,\n            loop         : false,\n            callback     : this.playRandomSound,\n            callbackScope: this,\n        });\n\n        const soundIndex = Phaser.Math.Between(0, this.miscSounds.length - 1);\n        this.miscSounds[soundIndex].play();\n    }\n}\n","/* global Phaser */\n// const consola = require('consola').withTag('UIScene');\n\nexport default class UIScene extends Phaser.Scene {\n    constructor() {\n        super({ key: 'UIScene', active: true });\n    }\n\n    create() {\n        this.scene.setVisible(false); // hide unless specifically set to visible\n\n        this.gameScene = this.scene.get('MainScene');\n        this.gameScene.events.on('lightChargeChanged', (chargeLevel) => {\n            this.drawPowerBar(chargeLevel);\n        });\n        this.gameScene.events.on('healthChanged', (health) => {\n            this.drawHealthBar(health);\n        });\n\n        // UI\n        this.powerBar = this.add.graphics();\n        this.healthBar = this.add.graphics();\n        this.drawPowerBar(1.0);\n        this.drawHealthBar(1.0);\n    }\n\n    drawPowerBar(chargeLevel) {\n        this.powerBar.fillStyle(0x555555);\n        this.powerBar.fillRect(10, 10, 50, 20);\n        this.powerBar.fillStyle(0xffff00);\n        this.powerBar.fillRect(10, 10, 50 * chargeLevel, 20);\n    }\n\n    drawHealthBar(health) {\n        this.powerBar.fillStyle(0x555555);\n        this.powerBar.fillRect(10, 40, 50, 20);\n        this.powerBar.fillStyle(0xff0000);\n        this.powerBar.fillRect(10, 40, 50 * health, 20);\n    }\n}\n","/* global Phaser */\n\nimport config from '../config';\n\nexport default class VictoryScene extends Phaser.Scene {\n    constructor() {\n        super({ key: 'VictoryScene', active: true });\n    }\n\n    create() {\n        this.scene.setVisible(false); // hide unless specifically shown\n\n        const victoryText = this.add.text(config.GAME_WIDTH / 2, config.GAME_HEIGHT / 2, 'Victory!', { backgroundColor: '#000' });\n        victoryText.x -= victoryText.width / 2;\n\n        const restartButton = this.add.text(config.GAME_WIDTH / 2, victoryText.y + victoryText.height + 20, 'Play Again', { backgroundColor: '#000' });\n        restartButton.x -= restartButton.width / 2;\n        restartButton.setInteractive();\n        restartButton.on('pointerup', () => {\n            const gameScene = this.scene.get('MainScene');\n            const uiScene = this.scene.get('UIScene');\n            uiScene.scene.restart();\n            gameScene.scene.restart();\n            this.scene.setVisible(false);\n        });\n    }\n}\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}